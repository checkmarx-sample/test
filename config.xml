<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.21">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.53">
    <script>node {
    stage (&apos;Demo Setup Steps&apos;)
    {
        println(&apos;Demo Setup Steps&apos;);
        //setup credentials first 
        //bat &apos;C:\\share\\Groovy\\pipelinsample\\MoveFile.cmd&apos;

        
    }
    stage(&apos;Git&apos;) {
         println(&apos;git&apos;);
         git credentialsId: &apos;d9e9ffa5-24a1-4645-8f6e-679c43ce61fa&apos;, url: &apos;https://github.com/checkmarx-sample/test.git&apos;
    
        
        //C:\Windows\System32\config\systemprofile\.jenkins\workspace\SamplePipelineScript
        
    }    
    stage (&apos;Extract Script&apos;) {
        
        println(&apos;Extract Script&apos;);
		//String tempFilePath = &apos;C:\\share\\Groovy\\pipelinsample&apos;;
		String tempFilePath = &apos;C:\\Windows\\System32\\config\\systemprofile\\.jenkins\\workspace\\SamplePipelineScan&apos;;
		String tempFileName = tempFilePath +&apos;\\&apos;+ &apos;temp.groovy&apos;
        def xmlText = new XmlSlurper().parse(&apos;C:\\Windows\\System32\\config\\systemprofile\\.jenkins\\workspace\\SamplePipelineScan\\config.xml&apos;);
        def sScript = xmlText.depthFirst().findAll { it.name() == &apos;script&apos; }
        theDir = new File(tempFileName);
        theDir.createNewFile();
        theDir.append(sScript)
     }    
     
    stage (&apos;Vulnerability&apos;) {
   
        String password=&quot;ABD&quot; 
        bat &apos;C:\\share\\Groovy\\pipelinsample\\sample.cmd ] + password
    }
    stage (&apos;Scan&apos;){
    step([$class: &apos;CxScanBuilder&apos;, comment: &apos;&apos;, credentialsId: &apos;&apos;, excludeFolders: &apos;&apos;, excludeOpenSourceFolders: &apos;&apos;, exclusionsSetting: &apos;global&apos;, failBuildOnNewResults: false, failBuildOnNewSeverity: &apos;HIGH&apos;, filterPattern: &apos;&apos;&apos;!**/_cvs/**/*, !**/.svn/**/*,   !**/.hg/**/*,   !**/.git/**/*,  !**/.bzr/**/*, !**/bin/**/*,
!**/obj/**/*,  !**/backup/**/*, !**/.idea/**/*, !**/*.DS_Store, !**/*.ipr,     !**/*.iws,
!**/*.bak,     !**/*.tmp,       !**/*.aac,      !**/*.aif,      !**/*.iff,     !**/*.m3u, !**/*.mid, !**/*.mp3,
!**/*.mpa,     !**/*.ra,        !**/*.wav,      !**/*.wma,      !**/*.3g2,     !**/*.3gp, !**/*.asf, !**/*.asx,
!**/*.avi,     !**/*.flv,       !**/*.mov,      !**/*.mp4,      !**/*.mpg,     !**/*.rm,  !**/*.swf, !**/*.vob,
!**/*.wmv,     !**/*.bmp,       !**/*.gif,      !**/*.jpg,      !**/*.png,     !**/*.psd, !**/*.tif, !**/*.swf,
!**/*.jar,     !**/*.zip,       !**/*.rar,      !**/*.exe,      !**/*.dll,     !**/*.pdb, !**/*.7z,  !**/*.gz,
!**/*.tar.gz,  !**/*.tar,       !**/*.gz,       !**/*.ahtm,     !**/*.ahtml,   !**/*.fhtml, !**/*.hdm,
!**/*.hdml,    !**/*.hsql,      !**/*.ht,       !**/*.hta,      !**/*.htc,     !**/*.htd, !**/*.war, !**/*.ear,
!**/*.htmls,   !**/*.ihtml,     !**/*.mht,      !**/*.mhtm,     !**/*.mhtml,   !**/*.ssi, !**/*.stm,
!**/*.stml,    !**/*.ttml,      !**/*.txn,      !**/*.xhtm,     !**/*.xhtml,   !**/*.class, !**/*.iml, !Checkmarx/Reports/*.*&apos;&apos;&apos;, fullScanCycle: 10, groupId: &apos;22222222-2222-448d-b029-989c9070eb23&apos;, includeOpenSourceFolders: &apos;&apos;, osaArchiveIncludePatterns: &apos;*.zip, *.war, *.ear, *.tgz&apos;, osaInstallBeforeScan: false, password: &apos;{AQAAABAAAAAQ+igO4pAC237IeZ+V9k3FO6p7ITjXXH/jWGc6gOfrwAM=}&apos;, preset: &apos;36&apos;, projectName: &apos;SamplePipelineScan&apos;, serverUrl: &apos;http://localhost&apos;, sourceEncoding: &apos;1&apos;, username: &apos;&apos;, vulnerabilityThresholdResult: &apos;FAILURE&apos;, waitForResultsEnabled: true])


    } 
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>